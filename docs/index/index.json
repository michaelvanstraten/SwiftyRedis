{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/cmd\/arg(_:)","title":"func arg<T>(T) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/cmd\/execute(_:)","title":"func execute(RedisConnection) async throws","type":"method"},{"path":"\/documentation\/swiftyredis\/cmd\/query(_:)","title":"func query<T>(RedisConnection) async throws -> T","type":"method"}],"path":"\/documentation\/swiftyredis\/cmd","title":"Cmd","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisclient\/init(_:port:params:database:username:password:)","title":"init(NWEndpoint.Host, port: NWEndpoint.Port, params: NWParameters, database: UInt, username: String?, password: String?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisclient\/get_connection()","title":"func get_connection() async throws -> RedisConnection","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisclient\/localhost","title":"static let LOCALHOST: RedisClient","type":"property"}],"path":"\/documentation\/swiftyredis\/redisclient","title":"RedisClient","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bgsaveoptions","title":"RedisConnection.BgsaveOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitcountindex\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitcountindex\/indexunit\/bit","title":"case BIT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitcountindex\/indexunit\/byte","title":"case BYTE","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitcountindex\/indexunit\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitcountindex\/indexunit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitcountindex\/indexunit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitcountindex\/indexunit","title":"RedisConnection.BitcountIndex.Indexunit","type":"enum"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitcountindex","title":"RedisConnection.BitcountIndex","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldroencodingoffset\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldroencodingoffset","title":"RedisConnection.BitfieldRoEncodingoffset","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitposindex\/endindex\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitposindex\/endindex\/indexunit\/bit","title":"case BIT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitposindex\/endindex\/indexunit\/byte","title":"case BYTE","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitposindex\/endindex\/indexunit\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitposindex\/endindex\/indexunit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitposindex\/endindex\/indexunit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitposindex\/endindex\/indexunit","title":"RedisConnection.BitposIndex.Endindex.Indexunit","type":"enum"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitposindex\/endindex","title":"RedisConnection.BitposIndex.Endindex","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitposindex\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitposindex","title":"RedisConnection.BitposIndex","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientlistid\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientlistid","title":"RedisConnection.ClientListId","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingoptions","title":"RedisConnection.ClientTrackingOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clusteraddslotsrangestartslotendslot\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clusteraddslotsrangestartslotendslot","title":"RedisConnection.ClusterAddslotsrangeStartslotendslot","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clusterdelslotsrangestartslotendslot\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clusterdelslotsrangestartslotendslot","title":"RedisConnection.ClusterDelslotsrangeStartslotendslot","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/configgetparameter\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/configgetparameter","title":"RedisConnection.ConfigGetParameter","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/configsetparametervalue\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/configsetparametervalue","title":"RedisConnection.ConfigSetParametervalue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/copyoptions","title":"RedisConnection.CopyOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/failoveroptions","title":"RedisConnection.FailoverOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failovertarget\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/failovertarget","title":"RedisConnection.FailoverTarget","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/functionlistoptions","title":"RedisConnection.FunctionListOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/functionloadoptions","title":"RedisConnection.FunctionLoadOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddlongitudelatitudemember\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddlongitudelatitudemember","title":"RedisConnection.GeoaddLongitudelatitudemember","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddoptions","title":"RedisConnection.GeoaddOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiuscount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiuscount","title":"RedisConnection.GeoradiusCount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusoptions","title":"RedisConnection.GeoradiusOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrocount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrocount","title":"RedisConnection.GeoradiusRoCount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrooptions","title":"RedisConnection.GeoradiusRoOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymembercount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymembercount","title":"RedisConnection.GeoradiusbymemberCount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberoptions","title":"RedisConnection.GeoradiusbymemberOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrocount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrocount","title":"RedisConnection.GeoradiusbymemberRoCount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrooptions","title":"RedisConnection.GeoradiusbymemberRoOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchcount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchcount","title":"RedisConnection.GeosearchCount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchoptions","title":"RedisConnection.GeosearchOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstorecount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstorecount","title":"RedisConnection.GeosearchstoreCount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreoptions","title":"RedisConnection.GeosearchstoreOptions","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/helloarguments\/usernamepassword\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/helloarguments\/usernamepassword","title":"RedisConnection.HelloArguments.Usernamepassword","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/helloarguments\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/helloarguments","title":"RedisConnection.HelloArguments","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hmsetfieldvalue\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/hmsetfieldvalue","title":"RedisConnection.HmsetFieldvalue","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hrandfieldoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/hrandfieldoptions","title":"RedisConnection.HrandfieldOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hsetfieldvalue\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/hsetfieldvalue","title":"RedisConnection.HsetFieldvalue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/lcsoptions","title":"RedisConnection.LcsOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/migrateoptions","title":"RedisConnection.MigrateOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/moduleloadexargs\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/moduleloadexargs","title":"RedisConnection.ModuleLoadexArgs","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/moduleloadexconfigs\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/moduleloadexconfigs","title":"RedisConnection.ModuleLoadexConfigs","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/msetkeyvalue\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/msetkeyvalue","title":"RedisConnection.MsetKeyvalue","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/msetnxkeyvalue\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/msetnxkeyvalue","title":"RedisConnection.MsetnxKeyvalue","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/psubscribepattern\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/psubscribepattern","title":"RedisConnection.PsubscribePattern","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/restoreaskingoptions","title":"RedisConnection.RestoreAskingOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/restoreoptions","title":"RedisConnection.RestoreOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentineldebugparametervalue\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sentineldebugparametervalue","title":"RedisConnection.SentinelDebugParametervalue","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelsetoptionvalue\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelsetoptionvalue","title":"RedisConnection.SentinelSetOptionvalue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/setoptions","title":"RedisConnection.SetOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownoptions","title":"RedisConnection.ShutdownOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoffsetcount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortoffsetcount","title":"RedisConnection.SortOffsetcount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortoptions","title":"RedisConnection.SortOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooffsetcount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooffsetcount","title":"RedisConnection.SortRoOffsetcount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortrooptions","title":"RedisConnection.SortRoOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddfieldvalue\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xaddfieldvalue","title":"RedisConnection.XaddFieldvalue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xaddoptions","title":"RedisConnection.XaddOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/asdasdad\/approximately","title":"case approximately","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/asdasdad\/equal","title":"case equal","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/asdasdad\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/asdasdad\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/asdasdad\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/asdasdad","title":"RedisConnection.XaddTrim.Asdasdad","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/strategy\/maxlen","title":"case MAXLEN","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/strategy\/minid","title":"case MINID","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/strategy\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/strategy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/strategy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim\/strategy","title":"RedisConnection.XaddTrim.Strategy","type":"enum"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xaddtrim","title":"RedisConnection.XaddTrim","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaimoptions","title":"RedisConnection.XautoclaimOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xclaimoptions","title":"RedisConnection.XclaimOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateoptions","title":"RedisConnection.XgroupCreateOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xinfostreamfull\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xinfostreamfull","title":"RedisConnection.XinfoStreamFull","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xpendingfilters\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xpendingfilters","title":"RedisConnection.XpendingFilters","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadstreams\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xreadstreams","title":"RedisConnection.XreadStreams","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupgroupconsumer\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupgroupconsumer","title":"RedisConnection.XreadgroupGroupconsumer","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupoptions","title":"RedisConnection.XreadgroupOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupstreams\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroupstreams","title":"RedisConnection.XreadgroupStreams","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/asdasdad\/approximately","title":"case approximately","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/asdasdad\/equal","title":"case equal","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/asdasdad\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/asdasdad\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/asdasdad\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/asdasdad","title":"RedisConnection.XtrimTrim.Asdasdad","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/strategy\/maxlen","title":"case MAXLEN","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/strategy\/minid","title":"case MINID","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/strategy\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/strategy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/strategy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim\/strategy","title":"RedisConnection.XtrimTrim.Strategy","type":"enum"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xtrimtrim","title":"RedisConnection.XtrimTrim","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zaddoptions","title":"RedisConnection.ZaddOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddscoremember\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zaddscoremember","title":"RedisConnection.ZaddScoremember","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffoptions","title":"RedisConnection.ZdiffOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zinteroptions","title":"RedisConnection.ZinterOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrandmemberoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrandmemberoptions","title":"RedisConnection.ZrandmemberOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoffsetcount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoffsetcount","title":"RedisConnection.ZrangeOffsetcount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangeoptions","title":"RedisConnection.ZrangeOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebylexoffsetcount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebylexoffsetcount","title":"RedisConnection.ZrangebylexOffsetcount","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoffsetcount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoffsetcount","title":"RedisConnection.ZrangebyscoreOffsetcount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscoreoptions","title":"RedisConnection.ZrangebyscoreOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoffsetcount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoffsetcount","title":"RedisConnection.ZrangestoreOffsetcount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoreoptions","title":"RedisConnection.ZrangestoreOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangeoptions","title":"RedisConnection.ZrevrangeOptions","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebylexoffsetcount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebylexoffsetcount","title":"RedisConnection.ZrevrangebylexOffsetcount","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoffsetcount\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoffsetcount","title":"RedisConnection.ZrevrangebyscoreOffsetcount","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscoreoptions","title":"RedisConnection.ZrevrangebyscoreOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/init(rawvalue:)","title":"init(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/rawvalue","title":"let rawValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zunionoptions","title":"RedisConnection.ZunionOptions","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl()","title":"func acl<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_cat(_:)","title":"func acl_cat<T>(String?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_deluser(_:)","title":"func acl_deluser<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_dryrun(_:_:_:)","title":"func acl_dryrun<T>(String, String, String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_genpass(_:)","title":"func acl_genpass<T>(Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_getuser(_:)","title":"func acl_getuser<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_help()","title":"func acl_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_list()","title":"func acl_list<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_load()","title":"func acl_load<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_log(_:)","title":"func acl_log<T>(RedisConnection.AclLogOperation?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_save()","title":"func acl_save<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_setuser(_:_:)","title":"func acl_setuser<T>(String, String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_users()","title":"func acl_users<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acl_whoami()","title":"func acl_whoami<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/append(_:_:)","title":"func append<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/asking()","title":"func asking<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/auth(_:password:)","title":"func auth<T>(String?, password: String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgrewriteaof()","title":"func bgrewriteaof<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bgsave(_:)","title":"func bgsave<T>(RedisConnection.BgsaveOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitcount(_:_:)","title":"func bitcount<T>(String, RedisConnection.BitcountIndex?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfield(_:_:)","title":"func bitfield<T>(String, RedisConnection.BitfieldOperation...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfield_ro(_:_:)","title":"func bitfield_ro<T>(String, RedisConnection.BitfieldRoEncodingoffset...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitop(_:_:_:)","title":"func bitop<T>(String, String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitpos(_:_:_:)","title":"func bitpos<T>(String, Int, RedisConnection.BitposIndex?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmove(_:_:_:_:_:)","title":"func blmove<T>(String, String, RedisConnection.BlmoveWherefrom, RedisConnection.BlmoveWhereto, Double) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmpop(_:_:_:_:key:)","title":"func blmpop<T>(Double, Int, RedisConnection.BlmpopSdfsdf, Int?, key: String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blpop(_:_:)","title":"func blpop<T>(Double, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/brpop(_:_:)","title":"func brpop<T>(Double, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/brpoplpush(_:_:_:)","title":"func brpoplpush<T>(String, String, Double) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bzmpop(_:_:_:_:key:)","title":"func bzmpop<T>(Double, Int, RedisConnection.BzmpopSdfsdf, Int?, key: String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bzpopmax(_:_:)","title":"func bzpopmax<T>(Double, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bzpopmin(_:_:)","title":"func bzpopmin<T>(Double, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client()","title":"func client<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_caching(_:)","title":"func client_caching<T>(RedisConnection.ClientCachingMode) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_getname()","title":"func client_getname<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_getredir()","title":"func client_getredir<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_help()","title":"func client_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_id()","title":"func client_id<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_info()","title":"func client_info<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_kill(_:clientid:normalmasterslavepubsub:username:addr:laddr:yesno:)","title":"func client_kill<T>(String?, clientId: Int?, normalMasterSlavePubsub: RedisConnection.ClientKillNormalmasterslavepubsub?, username: String?, ADDR: String?, LADDR: String?, yesNo: String?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_list(_:id:)","title":"func client_list<T>(RedisConnection.ClientListNormalmasterreplicapubsub?, id: RedisConnection.ClientListId?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_no_evict(_:)","title":"func client_no_evict<T>(RedisConnection.ClientNoEvictEnabled) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_pause(_:_:)","title":"func client_pause<T>(Int, RedisConnection.ClientPauseMode?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_reply(_:)","title":"func client_reply<T>(RedisConnection.ClientReplyOnoffskip) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_setname(_:)","title":"func client_setname<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_tracking(_:_:options:prefix:)","title":"func client_tracking<T>(RedisConnection.ClientTrackingStatus, Int?, options: RedisConnection.ClientTrackingOptions?, prefix: String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_trackinginfo()","title":"func client_trackinginfo<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_unblock(_:_:)","title":"func client_unblock<T>(Int, RedisConnection.ClientUnblockTimeouterror?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/client_unpause()","title":"func client_unpause<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster()","title":"func cluster<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_addslots(_:)","title":"func cluster_addslots<T>(Int...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_addslotsrange(_:)","title":"func cluster_addslotsrange<T>(RedisConnection.ClusterAddslotsrangeStartslotendslot...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_bumpepoch()","title":"func cluster_bumpepoch<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_count_failure_reports(_:)","title":"func cluster_count_failure_reports<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_countkeysinslot(_:)","title":"func cluster_countkeysinslot<T>(Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_delslots(_:)","title":"func cluster_delslots<T>(Int...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_delslotsrange(_:)","title":"func cluster_delslotsrange<T>(RedisConnection.ClusterDelslotsrangeStartslotendslot...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_failover(_:)","title":"func cluster_failover<T>(RedisConnection.ClusterFailoverOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_flushslots()","title":"func cluster_flushslots<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_forget(_:)","title":"func cluster_forget<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_getkeysinslot(_:_:)","title":"func cluster_getkeysinslot<T>(Int, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_help()","title":"func cluster_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_info()","title":"func cluster_info<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_keyslot(_:)","title":"func cluster_keyslot<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_links()","title":"func cluster_links<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_meet(_:_:_:)","title":"func cluster_meet<T>(String, Int, Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_myid()","title":"func cluster_myid<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_nodes()","title":"func cluster_nodes<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_replicas(_:)","title":"func cluster_replicas<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_replicate(_:)","title":"func cluster_replicate<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_reset(_:)","title":"func cluster_reset<T>(RedisConnection.ClusterResetHardsoft?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_saveconfig()","title":"func cluster_saveconfig<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_set_config_epoch(_:)","title":"func cluster_set_config_epoch<T>(Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_setslot(_:_:)","title":"func cluster_setslot<T>(Int, RedisConnection.ClusterSetslotSubcommand) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_shards()","title":"func cluster_shards<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_slaves(_:)","title":"func cluster_slaves<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/cluster_slots()","title":"func cluster_slots<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/command()","title":"func command<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/command_count()","title":"func command_count<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/command_docs(_:)","title":"func command_docs<T>(String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/command_getkeys()","title":"func command_getkeys<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/command_getkeysandflags()","title":"func command_getkeysandflags<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/command_help()","title":"func command_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/command_info(_:)","title":"func command_info<T>(String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/command_list(_:)","title":"func command_list<T>(RedisConnection.CommandListFilterby?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/config()","title":"func config<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/config_get(_:)","title":"func config_get<T>(RedisConnection.ConfigGetParameter...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/config_help()","title":"func config_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/config_resetstat()","title":"func config_resetstat<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/config_rewrite()","title":"func config_rewrite<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/config_set(_:)","title":"func config_set<T>(RedisConnection.ConfigSetParametervalue...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/copy(_:_:_:options:)","title":"func copy<T>(String, String, Int?, options: RedisConnection.CopyOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/dbsize()","title":"func dbsize<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/debug()","title":"func debug<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/decr(_:)","title":"func decr<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/decrby(_:_:)","title":"func decrby<T>(String, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/del(_:)","title":"func del<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/discard()","title":"func discard<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/dump(_:)","title":"func dump<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/echo(_:)","title":"func echo<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/eval(_:_:_:arg:)","title":"func eval<T>(String, Int, String?..., arg: String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/eval_ro(_:_:_:arg:)","title":"func eval_ro<T>(String, Int, String..., arg: String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/evalsha(_:_:_:arg:)","title":"func evalsha<T>(String, Int, String?..., arg: String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/evalsha_ro(_:_:_:arg:)","title":"func evalsha_ro<T>(String, Int, String..., arg: String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/exec()","title":"func exec<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/exists(_:)","title":"func exists<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expire(_:_:_:)","title":"func expire<T>(String, Int, RedisConnection.ExpireCondition?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expireat(_:_:_:)","title":"func expireat<T>(String, Int64, RedisConnection.ExpireatCondition?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expiretime(_:)","title":"func expiretime<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/failover(_:milliseconds:options:)","title":"func failover<T>(RedisConnection.FailoverTarget?, milliseconds: Int?, options: RedisConnection.FailoverOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/fcall(_:_:_:arg:)","title":"func fcall<T>(String, Int, String..., arg: String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/fcall_ro(_:_:_:arg:)","title":"func fcall_ro<T>(String, Int, String..., arg: String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/flushall(_:)","title":"func flushall<T>(RedisConnection.FlushallAsync?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/flushdb(_:)","title":"func flushdb<T>(RedisConnection.FlushdbAsync?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/function()","title":"func function<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/function_delete(_:)","title":"func function_delete<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/function_dump()","title":"func function_dump<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/function_flush(_:)","title":"func function_flush<T>(RedisConnection.FunctionFlushAsync?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/function_help()","title":"func function_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/function_kill()","title":"func function_kill<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/function_list(_:options:)","title":"func function_list<T>(String?, options: RedisConnection.FunctionListOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/function_load(_:_:)","title":"func function_load<T>(String, RedisConnection.FunctionLoadOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/function_restore(_:_:)","title":"func function_restore<T>(String, RedisConnection.FunctionRestorePolicy?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/function_stats()","title":"func function_stats<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoadd(_:_:options:longitudelatitudemember:)","title":"func geoadd<T>(String, RedisConnection.GeoaddCondition?, options: RedisConnection.GeoaddOptions?, longitudeLatitudeMember: RedisConnection.GeoaddLongitudelatitudemember...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geodist(_:_:_:_:)","title":"func geodist<T>(String, String, String, RedisConnection.GeodistUnit?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geohash(_:_:)","title":"func geohash<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geopos(_:_:)","title":"func geopos<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadius(_:_:_:_:_:_:order:store:storedist:options:)","title":"func georadius<T>(String, Double, Double, Double, RedisConnection.GeoradiusUnit, RedisConnection.GeoradiusCount?, order: RedisConnection.GeoradiusOrder?, STORE: String?, STOREDIST: String?, options: RedisConnection.GeoradiusOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadius_ro(_:_:_:_:_:_:order:options:)","title":"func georadius_ro<T>(String, Double, Double, Double, RedisConnection.GeoradiusRoUnit, RedisConnection.GeoradiusRoCount?, order: RedisConnection.GeoradiusRoOrder?, options: RedisConnection.GeoradiusRoOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymember(_:_:_:_:_:order:store:storedist:options:)","title":"func georadiusbymember<T>(String, String, Double, RedisConnection.GeoradiusbymemberUnit, RedisConnection.GeoradiusbymemberCount?, order: RedisConnection.GeoradiusbymemberOrder?, STORE: String?, STOREDIST: String?, options: RedisConnection.GeoradiusbymemberOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymember_ro(_:_:_:_:_:order:options:)","title":"func georadiusbymember_ro<T>(String, String, Double, RedisConnection.GeoradiusbymemberRoUnit, RedisConnection.GeoradiusbymemberRoCount?, order: RedisConnection.GeoradiusbymemberRoOrder?, options: RedisConnection.GeoradiusbymemberRoOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearch(_:_:_:_:count:options:)","title":"func geosearch<T>(String, RedisConnection.GeosearchFrom, RedisConnection.GeosearchBy, RedisConnection.GeosearchOrder?, count: RedisConnection.GeosearchCount?, options: RedisConnection.GeosearchOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstore(_:_:_:_:_:count:options:)","title":"func geosearchstore<T>(String, String, RedisConnection.GeosearchstoreFrom, RedisConnection.GeosearchstoreBy, RedisConnection.GeosearchstoreOrder?, count: RedisConnection.GeosearchstoreCount?, options: RedisConnection.GeosearchstoreOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/get(_:)","title":"func get<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/getbit(_:_:)","title":"func getbit<T>(String, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/getdel(_:)","title":"func getdel<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/getex(_:_:)","title":"func getex<T>(String, RedisConnection.GetexExpiration?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/getrange(_:_:_:)","title":"func getrange<T>(String, Int, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/getset(_:_:)","title":"func getset<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hdel(_:_:)","title":"func hdel<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hello(_:)","title":"func hello<T>(RedisConnection.HelloArguments?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hexists(_:_:)","title":"func hexists<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hget(_:_:)","title":"func hget<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hgetall(_:)","title":"func hgetall<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hincrby(_:_:_:)","title":"func hincrby<T>(String, String, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hincrbyfloat(_:_:_:)","title":"func hincrbyfloat<T>(String, String, Double) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hkeys(_:)","title":"func hkeys<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hlen(_:)","title":"func hlen<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hmget(_:_:)","title":"func hmget<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hmset(_:_:)","title":"func hmset<T>(String, RedisConnection.HmsetFieldvalue...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hrandfield(_:_:)","title":"func hrandfield<T>(String, RedisConnection.HrandfieldOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hscan(_:_:_:count:)","title":"func hscan<T>(String, Int, String?, count: Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hset(_:_:)","title":"func hset<T>(String, RedisConnection.HsetFieldvalue...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hsetnx(_:_:_:)","title":"func hsetnx<T>(String, String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hstrlen(_:_:)","title":"func hstrlen<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/hvals(_:)","title":"func hvals<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/incr(_:)","title":"func incr<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/incrby(_:_:)","title":"func incrby<T>(String, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/incrbyfloat(_:_:)","title":"func incrbyfloat<T>(String, Double) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/info(_:)","title":"func info<T>(String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/keys(_:)","title":"func keys<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lastsave()","title":"func lastsave<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/latency()","title":"func latency<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/latency_doctor()","title":"func latency_doctor<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/latency_graph(_:)","title":"func latency_graph<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/latency_help()","title":"func latency_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/latency_histogram(_:)","title":"func latency_histogram<T>(String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/latency_history(_:)","title":"func latency_history<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/latency_latest()","title":"func latency_latest<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/latency_reset(_:)","title":"func latency_reset<T>(String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lcs(_:_:_:options:)","title":"func lcs<T>(String, String, Int?, options: RedisConnection.LcsOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lindex(_:_:)","title":"func lindex<T>(String, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/linsert(_:_:_:_:)","title":"func linsert<T>(String, RedisConnection.LinsertSdfsdf, String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/llen(_:)","title":"func llen<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmove(_:_:_:_:)","title":"func lmove<T>(String, String, RedisConnection.LmoveWherefrom, RedisConnection.LmoveWhereto) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmpop(_:_:_:key:)","title":"func lmpop<T>(Int, RedisConnection.LmpopSdfsdf, Int?, key: String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lolwut(_:)","title":"func lolwut<T>(Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lpop(_:_:)","title":"func lpop<T>(String, Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lpos(_:_:_:nummatches:len:)","title":"func lpos<T>(String, String, Int?, numMatches: Int?, len: Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lpush(_:_:)","title":"func lpush<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lpushx(_:_:)","title":"func lpushx<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lrange(_:_:_:)","title":"func lrange<T>(String, Int, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lrem(_:_:_:)","title":"func lrem<T>(String, Int, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lset(_:_:_:)","title":"func lset<T>(String, Int, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/ltrim(_:_:_:)","title":"func ltrim<T>(String, Int, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/memory()","title":"func memory<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/memory_doctor()","title":"func memory_doctor<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/memory_help()","title":"func memory_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/memory_malloc_stats()","title":"func memory_malloc_stats<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/memory_purge()","title":"func memory_purge<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/memory_stats()","title":"func memory_stats<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/memory_usage(_:_:)","title":"func memory_usage<T>(String, Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/mget(_:)","title":"func mget<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrate(_:_:_:_:_:_:options:key:)","title":"func migrate<T>(String, Int, RedisConnection.MigrateKeyoremptystring, Int, Int, RedisConnection.MigrateAuthentication?, options: RedisConnection.MigrateOptions?, key: String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/module()","title":"func module<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/module_help()","title":"func module_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/module_list()","title":"func module_list<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/module_load(_:_:)","title":"func module_load<T>(String, String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/module_loadex(_:_:args:)","title":"func module_loadex<T>(String, RedisConnection.ModuleLoadexConfigs?..., args: RedisConnection.ModuleLoadexArgs?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/module_unload(_:)","title":"func module_unload<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/monitor()","title":"func monitor<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/move(_:_:)","title":"func move<T>(String, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/mset(_:)","title":"func mset<T>(RedisConnection.MsetKeyvalue...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/msetnx(_:)","title":"func msetnx<T>(RedisConnection.MsetnxKeyvalue...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/multi()","title":"func multi<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/object()","title":"func object<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/object_encoding(_:)","title":"func object_encoding<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/object_freq(_:)","title":"func object_freq<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/object_help()","title":"func object_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/object_idletime(_:)","title":"func object_idletime<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/object_refcount(_:)","title":"func object_refcount<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/persist(_:)","title":"func persist<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpire(_:_:_:)","title":"func pexpire<T>(String, Int, RedisConnection.PexpireCondition?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpireat(_:_:_:)","title":"func pexpireat<T>(String, Int64, RedisConnection.PexpireatCondition?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpiretime(_:)","title":"func pexpiretime<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pfadd(_:_:)","title":"func pfadd<T>(String, String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pfcount(_:)","title":"func pfcount<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pfdebug(_:_:)","title":"func pfdebug<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pfmerge(_:_:)","title":"func pfmerge<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pfselftest()","title":"func pfselftest<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/ping(_:)","title":"func ping<T>(String?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/psetex(_:_:_:)","title":"func psetex<T>(String, Int, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/psubscribe(_:)","title":"func psubscribe<T>(RedisConnection.PsubscribePattern...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/psync(_:_:)","title":"func psync<T>(String, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pttl(_:)","title":"func pttl<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/publish(_:_:)","title":"func publish<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pubsub()","title":"func pubsub<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pubsub_channels(_:)","title":"func pubsub_channels<T>(String?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pubsub_help()","title":"func pubsub_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pubsub_numpat()","title":"func pubsub_numpat<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pubsub_numsub(_:)","title":"func pubsub_numsub<T>(String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pubsub_shardchannels(_:)","title":"func pubsub_shardchannels<T>(String?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pubsub_shardnumsub(_:)","title":"func pubsub_shardnumsub<T>(String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/punsubscribe(_:)","title":"func punsubscribe<T>(String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/quit()","title":"func quit<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/randomkey()","title":"func randomkey<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/readonly()","title":"func readonly<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/readwrite()","title":"func readwrite<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/rename(_:_:)","title":"func rename<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/renamenx(_:_:)","title":"func renamenx<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/replconf()","title":"func replconf<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/replicaof(_:_:)","title":"func replicaof<T>(String, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/request_packed_cmd(_:)","title":"func request_packed_cmd(Data) async throws -> RedisValue","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/reset()","title":"func reset<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restore(_:_:_:_:frequency:options:)","title":"func restore<T>(String, Int, String, Int?, frequency: Int?, options: RedisConnection.RestoreOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/restore_asking(_:_:_:_:frequency:options:)","title":"func restore_asking<T>(String, Int, String, Int?, frequency: Int?, options: RedisConnection.RestoreAskingOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/role()","title":"func role<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/rpop(_:_:)","title":"func rpop<T>(String, Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/rpoplpush(_:_:)","title":"func rpoplpush<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/rpush(_:_:)","title":"func rpush<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/rpushx(_:_:)","title":"func rpushx<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sadd(_:_:)","title":"func sadd<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/save()","title":"func save<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/scan(_:_:count:type:)","title":"func scan<T>(Int, String?, count: Int?, type: String?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/scard(_:)","title":"func scard<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/script()","title":"func script<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/script_debug(_:)","title":"func script_debug<T>(RedisConnection.ScriptDebugMode) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/script_exists(_:)","title":"func script_exists<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/script_flush(_:)","title":"func script_flush<T>(RedisConnection.ScriptFlushAsync?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/script_help()","title":"func script_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/script_kill()","title":"func script_kill<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/script_load(_:)","title":"func script_load<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sdiff(_:)","title":"func sdiff<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sdiffstore(_:_:)","title":"func sdiffstore<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/select(_:)","title":"func select<T>(Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel()","title":"func sentinel<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_ckquorum(_:)","title":"func sentinel_ckquorum<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_config(_:)","title":"func sentinel_config<T>(RedisConnection.SentinelConfigSetorget) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_debug(_:)","title":"func sentinel_debug<T>(RedisConnection.SentinelDebugParametervalue...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_failover(_:)","title":"func sentinel_failover<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_flushconfig()","title":"func sentinel_flushconfig<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_get_master_addr_by_name(_:)","title":"func sentinel_get_master_addr_by_name<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_help()","title":"func sentinel_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_info_cache(_:)","title":"func sentinel_info_cache<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_is_master_down_by_addr(_:_:_:_:)","title":"func sentinel_is_master_down_by_addr<T>(String, Int, Int, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_master(_:)","title":"func sentinel_master<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_masters()","title":"func sentinel_masters<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_monitor(_:_:_:_:)","title":"func sentinel_monitor<T>(String, String, Int, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_myid()","title":"func sentinel_myid<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_pending_scripts()","title":"func sentinel_pending_scripts<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_remove(_:)","title":"func sentinel_remove<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_replicas(_:)","title":"func sentinel_replicas<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_reset(_:)","title":"func sentinel_reset<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_sentinels(_:)","title":"func sentinel_sentinels<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_set(_:_:)","title":"func sentinel_set<T>(String, RedisConnection.SentinelSetOptionvalue...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_simulate_failure(_:)","title":"func sentinel_simulate_failure<T>(RedisConnection.SentinelSimulateFailureMode?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinel_slaves(_:)","title":"func sentinel_slaves<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/set(_:_:_:expiration:options:)","title":"func set<T>(String, String, RedisConnection.SetCondition?, expiration: RedisConnection.SetExpiration?, options: RedisConnection.SetOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setbit(_:_:_:)","title":"func setbit<T>(String, Int, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setex(_:_:_:)","title":"func setex<T>(String, Int, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setnx(_:_:)","title":"func setnx<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setrange(_:_:_:)","title":"func setrange<T>(String, Int, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdown(_:options:)","title":"func shutdown<T>(RedisConnection.ShutdownNosavesave?, options: RedisConnection.ShutdownOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sinter(_:)","title":"func sinter<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sintercard(_:_:key:)","title":"func sintercard<T>(Int, Int?, key: String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sinterstore(_:_:)","title":"func sinterstore<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sismember(_:_:)","title":"func sismember<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/slaveof(_:_:)","title":"func slaveof<T>(String, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/slowlog()","title":"func slowlog<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/slowlog_get(_:)","title":"func slowlog_get<T>(Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/slowlog_help()","title":"func slowlog_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/slowlog_len()","title":"func slowlog_len<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/slowlog_reset()","title":"func slowlog_reset<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/smembers(_:)","title":"func smembers<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/smismember(_:_:)","title":"func smismember<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/smove(_:_:_:)","title":"func smove<T>(String, String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sort(_:_:offsetcount:order:destination:options:get:)","title":"func sort<T>(String, String?, offsetCount: RedisConnection.SortOffsetcount?, order: RedisConnection.SortOrder?, destination: String?, options: RedisConnection.SortOptions?, GET: String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sort_ro(_:_:offsetcount:order:options:get:)","title":"func sort_ro<T>(String, String?, offsetCount: RedisConnection.SortRoOffsetcount?, order: RedisConnection.SortRoOrder?, options: RedisConnection.SortRoOptions?, GET: String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/spop(_:_:)","title":"func spop<T>(String, Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/spublish(_:_:)","title":"func spublish<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/srandmember(_:_:)","title":"func srandmember<T>(String, Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/srem(_:_:)","title":"func srem<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sscan(_:_:_:count:)","title":"func sscan<T>(String, Int, String?, count: Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/ssubscribe(_:)","title":"func ssubscribe<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/strlen(_:)","title":"func strlen<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/subscribe(_:)","title":"func subscribe<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/substr(_:_:_:)","title":"func substr<T>(String, Int, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sunion(_:)","title":"func sunion<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sunionstore(_:_:)","title":"func sunionstore<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sunsubscribe(_:)","title":"func sunsubscribe<T>(String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/swapdb(_:_:)","title":"func swapdb<T>(Int, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sync()","title":"func sync<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/time()","title":"func time<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/touch(_:)","title":"func touch<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/ttl(_:)","title":"func ttl<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/type(_:)","title":"func type<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/unlink(_:)","title":"func unlink<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/unsubscribe(_:)","title":"func unsubscribe<T>(String?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/unwatch()","title":"func unwatch<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/wait(_:_:)","title":"func wait<T>(Int, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/watch(_:)","title":"func watch<T>(String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xack(_:_:_:)","title":"func xack<T>(String, String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xadd(_:_:idorauto:_:fieldvalue:)","title":"func xadd<T>(String, RedisConnection.XaddTrim?, idOrAuto: RedisConnection.XaddIdorauto, RedisConnection.XaddOptions?, fieldValue: RedisConnection.XaddFieldvalue...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xautoclaim(_:_:_:_:_:_:options:)","title":"func xautoclaim<T>(String, String, String, String, String, Int?, options: RedisConnection.XautoclaimOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xclaim(_:_:_:_:_:unixtimemilliseconds:count:options:id:)","title":"func xclaim<T>(String, String, String, String, Int?, unixTimeMilliseconds: Int64?, count: Int?, options: RedisConnection.XclaimOptions?, id: String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xdel(_:_:)","title":"func xdel<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroup()","title":"func xgroup<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroup_create(_:_:_:_:options:)","title":"func xgroup_create<T>(String, String, RedisConnection.XgroupCreateId, Int?, options: RedisConnection.XgroupCreateOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroup_createconsumer(_:_:_:)","title":"func xgroup_createconsumer<T>(String, String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroup_delconsumer(_:_:_:)","title":"func xgroup_delconsumer<T>(String, String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroup_destroy(_:_:)","title":"func xgroup_destroy<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroup_help()","title":"func xgroup_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroup_setid(_:_:_:_:)","title":"func xgroup_setid<T>(String, String, RedisConnection.XgroupSetidId, Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xinfo()","title":"func xinfo<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xinfo_consumers(_:_:)","title":"func xinfo_consumers<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xinfo_groups(_:)","title":"func xinfo_groups<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xinfo_help()","title":"func xinfo_help<T>() async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xinfo_stream(_:_:)","title":"func xinfo_stream<T>(String, RedisConnection.XinfoStreamFull?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xlen(_:)","title":"func xlen<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xpending(_:_:_:)","title":"func xpending<T>(String, String, RedisConnection.XpendingFilters?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xrange(_:_:_:_:)","title":"func xrange<T>(String, String, String, Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xread(_:milliseconds:streams:)","title":"func xread<T>(Int?, milliseconds: Int?, streams: RedisConnection.XreadStreams) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xreadgroup(_:_:milliseconds:streams:_:)","title":"func xreadgroup<T>(RedisConnection.XreadgroupGroupconsumer, Int?, milliseconds: Int?, streams: RedisConnection.XreadgroupStreams, RedisConnection.XreadgroupOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xrevrange(_:_:_:_:)","title":"func xrevrange<T>(String, String, String, Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xsetid(_:_:_:maxdeletedentryid:)","title":"func xsetid<T>(String, String, Int?, maxDeletedEntryId: String?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xtrim(_:_:)","title":"func xtrim<T>(String, RedisConnection.XtrimTrim) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zadd(_:_:comparison:options:scoremember:)","title":"func zadd<T>(String, RedisConnection.ZaddCondition?, comparison: RedisConnection.ZaddComparison?, options: RedisConnection.ZaddOptions?, scoreMember: RedisConnection.ZaddScoremember...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zcard(_:)","title":"func zcard<T>(String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zcount(_:_:_:)","title":"func zcount<T>(String, Double, Double) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiff(_:_:key:)","title":"func zdiff<T>(Int, RedisConnection.ZdiffOptions?, key: String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zdiffstore(_:_:_:)","title":"func zdiffstore<T>(String, Int, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zincrby(_:_:_:)","title":"func zincrby<T>(String, Int, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinter(_:_:options:key:weight:)","title":"func zinter<T>(Int, RedisConnection.ZinterAggregate?, options: RedisConnection.ZinterOptions?, key: String..., weight: Int?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zintercard(_:_:key:)","title":"func zintercard<T>(Int, Int?, key: String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinterstore(_:_:_:key:weight:)","title":"func zinterstore<T>(String, Int, RedisConnection.ZinterstoreAggregate?, key: String..., weight: Int?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zlexcount(_:_:_:)","title":"func zlexcount<T>(String, String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zmpop(_:_:_:key:)","title":"func zmpop<T>(Int, RedisConnection.ZmpopSdfsdf, Int?, key: String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zmscore(_:_:)","title":"func zmscore<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zpopmax(_:_:)","title":"func zpopmax<T>(String, Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zpopmin(_:_:)","title":"func zpopmin<T>(String, Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrandmember(_:_:)","title":"func zrandmember<T>(String, RedisConnection.ZrandmemberOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrange(_:_:_:_:offsetcount:options:)","title":"func zrange<T>(String, String, String, RedisConnection.ZrangeSortby?, offsetCount: RedisConnection.ZrangeOffsetcount?, options: RedisConnection.ZrangeOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebylex(_:_:_:_:)","title":"func zrangebylex<T>(String, String, String, RedisConnection.ZrangebylexOffsetcount?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangebyscore(_:_:_:_:options:)","title":"func zrangebyscore<T>(String, Double, Double, RedisConnection.ZrangebyscoreOffsetcount?, options: RedisConnection.ZrangebyscoreOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestore(_:_:_:_:_:offsetcount:options:)","title":"func zrangestore<T>(String, String, String, String, RedisConnection.ZrangestoreSortby?, offsetCount: RedisConnection.ZrangestoreOffsetcount?, options: RedisConnection.ZrangestoreOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrank(_:_:)","title":"func zrank<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrem(_:_:)","title":"func zrem<T>(String, String...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zremrangebylex(_:_:_:)","title":"func zremrangebylex<T>(String, String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zremrangebyrank(_:_:_:)","title":"func zremrangebyrank<T>(String, Int, Int) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zremrangebyscore(_:_:_:)","title":"func zremrangebyscore<T>(String, Double, Double) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrange(_:_:_:_:)","title":"func zrevrange<T>(String, Int, Int, RedisConnection.ZrevrangeOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebylex(_:_:_:_:)","title":"func zrevrangebylex<T>(String, String, String, RedisConnection.ZrevrangebylexOffsetcount?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrangebyscore(_:_:_:_:options:)","title":"func zrevrangebyscore<T>(String, Double, Double, RedisConnection.ZrevrangebyscoreOffsetcount?, options: RedisConnection.ZrevrangebyscoreOptions?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrevrank(_:_:)","title":"func zrevrank<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zscan(_:_:_:count:)","title":"func zscan<T>(String, Int, String?, count: Int?) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zscore(_:_:)","title":"func zscore<T>(String, String) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunion(_:_:options:key:weight:)","title":"func zunion<T>(Int, RedisConnection.ZunionAggregate?, options: RedisConnection.ZunionOptions?, key: String..., weight: Int?...) async throws -> T","type":"method"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionstore(_:_:_:key:weight:)","title":"func zunionstore<T>(String, Int, RedisConnection.ZunionstoreAggregate?, key: String..., weight: Int?...) async throws -> T","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acllogoperation\/count(_:)","title":"case COUNT(Int)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acllogoperation\/reset","title":"case RESET","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/acllogoperation\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/acllogoperation","title":"RedisConnection.AclLogOperation","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/encodingoffset\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/encodingoffset","title":"RedisConnection.BitfieldOperation.Encodingoffset","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/wrapsatfail\/fail","title":"case FAIL","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/wrapsatfail\/sat","title":"case SAT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/wrapsatfail\/wrap","title":"case WRAP","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/wrapsatfail\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/wrapsatfail\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/wrapsatfail\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/wrapsatfail","title":"RedisConnection.BitfieldOperation.Write.Wrapsatfail","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/writeoperation\/encodingoffsetincrement\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/writeoperation\/encodingoffsetincrement","title":"RedisConnection.BitfieldOperation.Write.Writeoperation.Encodingoffsetincrement","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/writeoperation\/encodingoffsetvalue\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/writeoperation\/encodingoffsetvalue","title":"RedisConnection.BitfieldOperation.Write.Writeoperation.Encodingoffsetvalue","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/writeoperation\/incrby(_:)","title":"case INCRBY(RedisConnection.BitfieldOperation.Write.Writeoperation.Encodingoffsetincrement)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/writeoperation\/set(_:)","title":"case SET(RedisConnection.BitfieldOperation.Write.Writeoperation.Encodingoffsetvalue)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/writeoperation\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write\/writeoperation","title":"RedisConnection.BitfieldOperation.Write.Writeoperation","type":"enum"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write","title":"RedisConnection.BitfieldOperation.Write","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/get(_:)","title":"case GET(RedisConnection.BitfieldOperation.Encodingoffset)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write(_:)","title":"case WRITE(RedisConnection.BitfieldOperation.Write)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bitfieldoperation","title":"RedisConnection.BitfieldOperation","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmovewherefrom\/left","title":"case LEFT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmovewherefrom\/right","title":"case RIGHT","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmovewherefrom\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmovewherefrom\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/blmovewherefrom\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/blmovewherefrom","title":"RedisConnection.BlmoveWherefrom","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmovewhereto\/left","title":"case LEFT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmovewhereto\/right","title":"case RIGHT","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmovewhereto\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmovewhereto\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/blmovewhereto\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/blmovewhereto","title":"RedisConnection.BlmoveWhereto","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmpopsdfsdf\/left","title":"case LEFT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmpopsdfsdf\/right","title":"case RIGHT","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmpopsdfsdf\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/blmpopsdfsdf\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/blmpopsdfsdf\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/blmpopsdfsdf","title":"RedisConnection.BlmpopSdfsdf","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bzmpopsdfsdf\/max","title":"case MAX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bzmpopsdfsdf\/min","title":"case MIN","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bzmpopsdfsdf\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/bzmpopsdfsdf\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bzmpopsdfsdf\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/bzmpopsdfsdf","title":"RedisConnection.BzmpopSdfsdf","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientcachingmode\/no","title":"case NO","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientcachingmode\/yes","title":"case YES","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientcachingmode\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientcachingmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientcachingmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientcachingmode","title":"RedisConnection.ClientCachingMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientkillnormalmasterslavepubsub\/master","title":"case master","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientkillnormalmasterslavepubsub\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientkillnormalmasterslavepubsub\/pubsub","title":"case pubsub","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientkillnormalmasterslavepubsub\/replica","title":"case replica","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientkillnormalmasterslavepubsub\/slave","title":"case slave","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientkillnormalmasterslavepubsub\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientkillnormalmasterslavepubsub\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientkillnormalmasterslavepubsub\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientkillnormalmasterslavepubsub","title":"RedisConnection.ClientKillNormalmasterslavepubsub","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientlistnormalmasterreplicapubsub\/master","title":"case master","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientlistnormalmasterreplicapubsub\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientlistnormalmasterreplicapubsub\/pubsub","title":"case pubsub","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientlistnormalmasterreplicapubsub\/replica","title":"case replica","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientlistnormalmasterreplicapubsub\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientlistnormalmasterreplicapubsub\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientlistnormalmasterreplicapubsub\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientlistnormalmasterreplicapubsub","title":"RedisConnection.ClientListNormalmasterreplicapubsub","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientnoevictenabled\/off","title":"case OFF","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientnoevictenabled\/on","title":"case ON","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientnoevictenabled\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientnoevictenabled\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientnoevictenabled\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientnoevictenabled","title":"RedisConnection.ClientNoEvictEnabled","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientpausemode\/all","title":"case ALL","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientpausemode\/write","title":"case WRITE","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientpausemode\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientpausemode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientpausemode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientpausemode","title":"RedisConnection.ClientPauseMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientreplyonoffskip\/off","title":"case OFF","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientreplyonoffskip\/on","title":"case ON","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientreplyonoffskip\/skip","title":"case SKIP","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientreplyonoffskip\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientreplyonoffskip\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientreplyonoffskip\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientreplyonoffskip","title":"RedisConnection.ClientReplyOnoffskip","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingstatus\/off","title":"case OFF","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingstatus\/on","title":"case ON","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingstatus\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingstatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clienttrackingstatus","title":"RedisConnection.ClientTrackingStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientunblocktimeouterror\/error","title":"case ERROR","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientunblocktimeouterror\/timeout","title":"case TIMEOUT","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientunblocktimeouterror\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clientunblocktimeouterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientunblocktimeouterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clientunblocktimeouterror","title":"RedisConnection.ClientUnblockTimeouterror","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clusterfailoveroptions\/force","title":"case FORCE","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clusterfailoveroptions\/takeover","title":"case TAKEOVER","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clusterfailoveroptions\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clusterfailoveroptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clusterfailoveroptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clusterfailoveroptions","title":"RedisConnection.ClusterFailoverOptions","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clusterresethardsoft\/hard","title":"case HARD","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clusterresethardsoft\/soft","title":"case SOFT","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clusterresethardsoft\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clusterresethardsoft\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clusterresethardsoft\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clusterresethardsoft","title":"RedisConnection.ClusterResetHardsoft","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clustersetslotsubcommand\/importing(_:)","title":"case IMPORTING(String)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clustersetslotsubcommand\/migrating(_:)","title":"case MIGRATING(String)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clustersetslotsubcommand\/node(_:)","title":"case NODE(String)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clustersetslotsubcommand\/stable","title":"case STABLE","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/clustersetslotsubcommand\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/clustersetslotsubcommand","title":"RedisConnection.ClusterSetslotSubcommand","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/commandlistfilterby\/aclcat(_:)","title":"case ACLCAT(String)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/commandlistfilterby\/module(_:)","title":"case MODULE(String)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/commandlistfilterby\/pattern(_:)","title":"case PATTERN(String)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/commandlistfilterby\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/commandlistfilterby","title":"RedisConnection.CommandListFilterby","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expirecondition\/gt","title":"case GT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expirecondition\/lt","title":"case LT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expirecondition\/nx","title":"case NX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expirecondition\/xx","title":"case XX","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expirecondition\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expirecondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/expirecondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/expirecondition","title":"RedisConnection.ExpireCondition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expireatcondition\/gt","title":"case GT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expireatcondition\/lt","title":"case LT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expireatcondition\/nx","title":"case NX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expireatcondition\/xx","title":"case XX","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expireatcondition\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/expireatcondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/expireatcondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/expireatcondition","title":"RedisConnection.ExpireatCondition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/flushallasync\/async","title":"case ASYNC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/flushallasync\/sync","title":"case SYNC","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/flushallasync\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/flushallasync\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/flushallasync\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/flushallasync","title":"RedisConnection.FlushallAsync","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/flushdbasync\/async","title":"case ASYNC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/flushdbasync\/sync","title":"case SYNC","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/flushdbasync\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/flushdbasync\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/flushdbasync\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/flushdbasync","title":"RedisConnection.FlushdbAsync","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionflushasync\/async","title":"case ASYNC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionflushasync\/sync","title":"case SYNC","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionflushasync\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionflushasync\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/functionflushasync\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/functionflushasync","title":"RedisConnection.FunctionFlushAsync","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionrestorepolicy\/append","title":"case APPEND","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionrestorepolicy\/flush","title":"case FLUSH","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionrestorepolicy\/replace","title":"case REPLACE","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionrestorepolicy\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/functionrestorepolicy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/functionrestorepolicy\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/functionrestorepolicy","title":"RedisConnection.FunctionRestorePolicy","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddcondition\/nx","title":"case NX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddcondition\/xx","title":"case XX","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddcondition\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddcondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddcondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geoaddcondition","title":"RedisConnection.GeoaddCondition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geodistunit\/ft","title":"case ft","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geodistunit\/km","title":"case km","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geodistunit\/m","title":"case m","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geodistunit\/mi","title":"case mi","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geodistunit\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geodistunit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geodistunit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geodistunit","title":"RedisConnection.GeodistUnit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusorder\/asc","title":"case ASC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusorder\/desc","title":"case DESC","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusorder\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusorder","title":"RedisConnection.GeoradiusOrder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusroorder\/asc","title":"case ASC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusroorder\/desc","title":"case DESC","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusroorder\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusroorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusroorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusroorder","title":"RedisConnection.GeoradiusRoOrder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrounit\/ft","title":"case ft","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrounit\/km","title":"case km","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrounit\/m","title":"case m","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrounit\/mi","title":"case mi","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrounit\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrounit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrounit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusrounit","title":"RedisConnection.GeoradiusRoUnit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusunit\/ft","title":"case ft","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusunit\/km","title":"case km","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusunit\/m","title":"case m","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusunit\/mi","title":"case mi","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusunit\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusunit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusunit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusunit","title":"RedisConnection.GeoradiusUnit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberorder\/asc","title":"case ASC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberorder\/desc","title":"case DESC","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberorder\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberorder","title":"RedisConnection.GeoradiusbymemberOrder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberroorder\/asc","title":"case ASC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberroorder\/desc","title":"case DESC","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberroorder\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberroorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberroorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberroorder","title":"RedisConnection.GeoradiusbymemberRoOrder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrounit\/ft","title":"case ft","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrounit\/km","title":"case km","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrounit\/m","title":"case m","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrounit\/mi","title":"case mi","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrounit\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrounit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrounit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberrounit","title":"RedisConnection.GeoradiusbymemberRoUnit","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberunit\/ft","title":"case ft","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberunit\/km","title":"case km","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberunit\/m","title":"case m","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberunit\/mi","title":"case mi","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberunit\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberunit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberunit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/georadiusbymemberunit","title":"RedisConnection.GeoradiusbymemberUnit","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/box\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/box\/unit\/ft","title":"case ft","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/box\/unit\/km","title":"case km","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/box\/unit\/m","title":"case m","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/box\/unit\/mi","title":"case mi","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/box\/unit\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/box\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/box\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/box\/unit","title":"RedisConnection.GeosearchBy.Box.Unit","type":"enum"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/box","title":"RedisConnection.GeosearchBy.Box","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/circle\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/circle\/unit\/ft","title":"case ft","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/circle\/unit\/km","title":"case km","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/circle\/unit\/m","title":"case m","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/circle\/unit\/mi","title":"case mi","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/circle\/unit\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/circle\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/circle\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/circle\/unit","title":"RedisConnection.GeosearchBy.Circle.Unit","type":"enum"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/circle","title":"RedisConnection.GeosearchBy.Circle","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/box(_:)","title":"case BOX(RedisConnection.GeosearchBy.Box)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/circle(_:)","title":"case CIRCLE(RedisConnection.GeosearchBy.Circle)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchby","title":"RedisConnection.GeosearchBy","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchfrom\/longitudelatitude\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchfrom\/longitudelatitude","title":"RedisConnection.GeosearchFrom.Longitudelatitude","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchfrom\/fromlonlat(_:)","title":"case FROMLONLAT(RedisConnection.GeosearchFrom.Longitudelatitude)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchfrom\/frommember(_:)","title":"case FROMMEMBER(String)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchfrom\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchfrom","title":"RedisConnection.GeosearchFrom","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchorder\/asc","title":"case ASC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchorder\/desc","title":"case DESC","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchorder\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchorder","title":"RedisConnection.GeosearchOrder","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/box\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/box\/unit\/ft","title":"case ft","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/box\/unit\/km","title":"case km","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/box\/unit\/m","title":"case m","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/box\/unit\/mi","title":"case mi","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/box\/unit\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/box\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/box\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/box\/unit","title":"RedisConnection.GeosearchstoreBy.Box.Unit","type":"enum"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/box","title":"RedisConnection.GeosearchstoreBy.Box","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/circle\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/circle\/unit\/ft","title":"case ft","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/circle\/unit\/km","title":"case km","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/circle\/unit\/m","title":"case m","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/circle\/unit\/mi","title":"case mi","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/circle\/unit\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/circle\/unit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/circle\/unit\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/circle\/unit","title":"RedisConnection.GeosearchstoreBy.Circle.Unit","type":"enum"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/circle","title":"RedisConnection.GeosearchstoreBy.Circle","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/box(_:)","title":"case BOX(RedisConnection.GeosearchstoreBy.Box)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/circle(_:)","title":"case CIRCLE(RedisConnection.GeosearchstoreBy.Circle)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreby","title":"RedisConnection.GeosearchstoreBy","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstorefrom\/longitudelatitude\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstorefrom\/longitudelatitude","title":"RedisConnection.GeosearchstoreFrom.Longitudelatitude","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstorefrom\/fromlonlat(_:)","title":"case FROMLONLAT(RedisConnection.GeosearchstoreFrom.Longitudelatitude)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstorefrom\/frommember(_:)","title":"case FROMMEMBER(String)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstorefrom\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstorefrom","title":"RedisConnection.GeosearchstoreFrom","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreorder\/asc","title":"case ASC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreorder\/desc","title":"case DESC","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreorder\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/geosearchstoreorder","title":"RedisConnection.GeosearchstoreOrder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/getexexpiration\/ex(_:)","title":"case EX(Int)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/getexexpiration\/exat(_:)","title":"case EXAT(Int64)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/getexexpiration\/persist","title":"case PERSIST","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/getexexpiration\/px(_:)","title":"case PX(Int)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/getexexpiration\/pxat(_:)","title":"case PXAT(Int64)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/getexexpiration\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/getexexpiration","title":"RedisConnection.GetexExpiration","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/linsertsdfsdf\/after","title":"case AFTER","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/linsertsdfsdf\/before","title":"case BEFORE","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/linsertsdfsdf\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/linsertsdfsdf\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/linsertsdfsdf\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/linsertsdfsdf","title":"RedisConnection.LinsertSdfsdf","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmovewherefrom\/left","title":"case LEFT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmovewherefrom\/right","title":"case RIGHT","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmovewherefrom\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmovewherefrom\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/lmovewherefrom\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/lmovewherefrom","title":"RedisConnection.LmoveWherefrom","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmovewhereto\/left","title":"case LEFT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmovewhereto\/right","title":"case RIGHT","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmovewhereto\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmovewhereto\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/lmovewhereto\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/lmovewhereto","title":"RedisConnection.LmoveWhereto","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmpopsdfsdf\/left","title":"case LEFT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmpopsdfsdf\/right","title":"case RIGHT","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmpopsdfsdf\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/lmpopsdfsdf\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/lmpopsdfsdf\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/lmpopsdfsdf","title":"RedisConnection.LmpopSdfsdf","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateauthentication\/usernamepassword\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/migrateauthentication\/usernamepassword","title":"RedisConnection.MigrateAuthentication.Usernamepassword","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateauthentication\/auth(_:)","title":"case AUTH(String)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateauthentication\/auth2(_:)","title":"case AUTH2(RedisConnection.MigrateAuthentication.Usernamepassword)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migrateauthentication\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/migrateauthentication","title":"RedisConnection.MigrateAuthentication","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migratekeyoremptystring\/key(_:)","title":"case KEY(String)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migratekeyoremptystring\/empty_string","title":"case empty_string","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/migratekeyoremptystring\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/migratekeyoremptystring","title":"RedisConnection.MigrateKeyoremptystring","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpirecondition\/gt","title":"case GT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpirecondition\/lt","title":"case LT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpirecondition\/nx","title":"case NX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpirecondition\/xx","title":"case XX","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpirecondition\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpirecondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/pexpirecondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/pexpirecondition","title":"RedisConnection.PexpireCondition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpireatcondition\/gt","title":"case GT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpireatcondition\/lt","title":"case LT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpireatcondition\/nx","title":"case NX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpireatcondition\/xx","title":"case XX","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpireatcondition\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/pexpireatcondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/pexpireatcondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/pexpireatcondition","title":"RedisConnection.PexpireatCondition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/scriptdebugmode\/no","title":"case NO","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/scriptdebugmode\/sync","title":"case SYNC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/scriptdebugmode\/yes","title":"case YES","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/scriptdebugmode\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/scriptdebugmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/scriptdebugmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/scriptdebugmode","title":"RedisConnection.ScriptDebugMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/scriptflushasync\/async","title":"case ASYNC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/scriptflushasync\/sync","title":"case SYNC","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/scriptflushasync\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/scriptflushasync\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/scriptflushasync\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/scriptflushasync","title":"RedisConnection.ScriptFlushAsync","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelconfigsetorget\/setparamvalue\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelconfigsetorget\/setparamvalue","title":"RedisConnection.SentinelConfigSetorget.Setparamvalue","type":"struct"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelconfigsetorget\/get(_:)","title":"case GET(String)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelconfigsetorget\/set(_:)","title":"case SET(RedisConnection.SentinelConfigSetorget.Setparamvalue)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelconfigsetorget\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelconfigsetorget","title":"RedisConnection.SentinelConfigSetorget","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelsimulatefailuremode\/crash_after_election","title":"case CRASH_AFTER_ELECTION","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelsimulatefailuremode\/crash_after_promotion","title":"case CRASH_AFTER_PROMOTION","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelsimulatefailuremode\/help","title":"case HELP","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelsimulatefailuremode\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelsimulatefailuremode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelsimulatefailuremode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sentinelsimulatefailuremode","title":"RedisConnection.SentinelSimulateFailureMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setcondition\/nx","title":"case NX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setcondition\/xx","title":"case XX","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setcondition\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setcondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/setcondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/setcondition","title":"RedisConnection.SetCondition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setexpiration\/ex(_:)","title":"case EX(Int)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setexpiration\/exat(_:)","title":"case EXAT(Int64)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setexpiration\/keepttl","title":"case KEEPTTL","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setexpiration\/px(_:)","title":"case PX(Int)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setexpiration\/pxat(_:)","title":"case PXAT(Int64)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/setexpiration\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/setexpiration","title":"RedisConnection.SetExpiration","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownnosavesave\/nosave","title":"case NOSAVE","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownnosavesave\/save","title":"case SAVE","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownnosavesave\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownnosavesave\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownnosavesave\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/shutdownnosavesave","title":"RedisConnection.ShutdownNosavesave","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortorder\/asc","title":"case ASC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortorder\/desc","title":"case DESC","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortorder\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortorder","title":"RedisConnection.SortOrder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortroorder\/asc","title":"case ASC","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortroorder\/desc","title":"case DESC","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortroorder\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/sortroorder\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortroorder\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/sortroorder","title":"RedisConnection.SortRoOrder","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddidorauto\/id(_:)","title":"case ID(String)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddidorauto\/auto_id","title":"case auto_id","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xaddidorauto\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xaddidorauto","title":"RedisConnection.XaddIdorauto","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateid\/id(_:)","title":"case ID(String)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateid\/new_id","title":"case new_id","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateid\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupcreateid","title":"RedisConnection.XgroupCreateId","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupsetidid\/id(_:)","title":"case ID(String)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupsetidid\/new_id","title":"case new_id","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupsetidid\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"}],"path":"\/documentation\/swiftyredis\/redisconnection\/xgroupsetidid","title":"RedisConnection.XgroupSetidId","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddcomparison\/gt","title":"case GT","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddcomparison\/lt","title":"case LT","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddcomparison\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddcomparison\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zaddcomparison\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zaddcomparison","title":"RedisConnection.ZaddComparison","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddcondition\/nx","title":"case NX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddcondition\/xx","title":"case XX","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddcondition\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zaddcondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zaddcondition\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zaddcondition","title":"RedisConnection.ZaddCondition","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteraggregate\/max","title":"case MAX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteraggregate\/min","title":"case MIN","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteraggregate\/sum","title":"case SUM","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteraggregate\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinteraggregate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zinteraggregate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zinteraggregate","title":"RedisConnection.ZinterAggregate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinterstoreaggregate\/max","title":"case MAX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinterstoreaggregate\/min","title":"case MIN","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinterstoreaggregate\/sum","title":"case SUM","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinterstoreaggregate\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zinterstoreaggregate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zinterstoreaggregate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zinterstoreaggregate","title":"RedisConnection.ZinterstoreAggregate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zmpopsdfsdf\/max","title":"case MAX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zmpopsdfsdf\/min","title":"case MIN","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zmpopsdfsdf\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zmpopsdfsdf\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zmpopsdfsdf\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zmpopsdfsdf","title":"RedisConnection.ZmpopSdfsdf","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangesortby\/bylex","title":"case BYLEX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangesortby\/byscore","title":"case BYSCORE","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangesortby\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangesortby\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangesortby\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangesortby","title":"RedisConnection.ZrangeSortby","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoresortby\/bylex","title":"case BYLEX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoresortby\/byscore","title":"case BYSCORE","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoresortby\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoresortby\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoresortby\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zrangestoresortby","title":"RedisConnection.ZrangestoreSortby","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionaggregate\/max","title":"case MAX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionaggregate\/min","title":"case MIN","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionaggregate\/sum","title":"case SUM","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionaggregate\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionaggregate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zunionaggregate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zunionaggregate","title":"RedisConnection.ZunionAggregate","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionstoreaggregate\/max","title":"case MAX","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionstoreaggregate\/min","title":"case MIN","type":"case"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionstoreaggregate\/sum","title":"case SUM","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionstoreaggregate\/write_redis_args(out:)","title":"func write_redis_args(out: inout [Data])","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisconnection\/zunionstoreaggregate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zunionstoreaggregate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisconnection\/zunionstoreaggregate","title":"RedisConnection.ZunionstoreAggregate","type":"enum"}],"path":"\/documentation\/swiftyredis\/redisconnection","title":"RedisConnection","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/fromredisvalue\/init(_:)","title":"init(RedisValue) throws","type":"init"}],"path":"\/documentation\/swiftyredis\/fromredisvalue","title":"FromRedisValue","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/toredisargs\/write_redis_args(out:)","title":"func write_redis_args(out: inout Array<Data>)","type":"method"}],"path":"\/documentation\/swiftyredis\/toredisargs","title":"ToRedisArgs","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisresp\/array","title":"static let Array: UInt8","type":"property"},{"path":"\/documentation\/swiftyredis\/redisresp\/bulkstring","title":"static let BulkString: UInt8","type":"property"},{"path":"\/documentation\/swiftyredis\/redisresp\/crlf","title":"static let CRLF: [UInt8]","type":"property"},{"path":"\/documentation\/swiftyredis\/redisresp\/error","title":"static let Error: UInt8","type":"property"},{"path":"\/documentation\/swiftyredis\/redisresp\/int","title":"static let Int: UInt8","type":"property"},{"path":"\/documentation\/swiftyredis\/redisresp\/simplestring","title":"static let SimpleString: UInt8","type":"property"}],"path":"\/documentation\/swiftyredis\/redisresp","title":"RedisRESP","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/errorkind\/ask","title":"case Ask","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/authenticationfailed","title":"case AuthenticationFailed","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/busyloadingerror","title":"case BusyLoadingError","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/clienterror","title":"case ClientError","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/clusterdown","title":"case ClusterDown","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/crossslot","title":"case CrossSlot","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/execaborterror","title":"case ExecAbortError","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/extensionerror","title":"case ExtensionError","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/invalidclientconfig","title":"case InvalidClientConfig","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/ioerror","title":"case IoError","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/masterdown","title":"case MasterDown","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/moved","title":"case Moved","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/noscripterror","title":"case NoScriptError","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/readonly","title":"case ReadOnly","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/responseerror","title":"case ResponseError","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/tryagain","title":"case TryAgain","type":"case"},{"path":"\/documentation\/swiftyredis\/errorkind\/typeerror","title":"case TypeError","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/errorkind\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/errorkind\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/errorkind","title":"ErrorKind","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/rediserror\/extensionerror(_:_:)","title":"case ExtensionError(String, String)","type":"case"},{"path":"\/documentation\/swiftyredis\/rediserror\/nwerror(_:)","title":"case NWError(NWError)","type":"case"},{"path":"\/documentation\/swiftyredis\/rediserror\/withdescription(_:_:)","title":"case WithDescription(ErrorKind, String)","type":"case"},{"path":"\/documentation\/swiftyredis\/rediserror\/withdescriptionanddetail(_:_:_:)","title":"case WithDescriptionAndDetail(ErrorKind, String, String)","type":"case"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/rediserror\/invalidresponseerror","title":"static let InvalidResponseError: RedisError","type":"property"},{"path":"\/documentation\/swiftyredis\/rediserror\/invalidutf8","title":"static let InvalidUTF8: RedisError","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/rediserror\/make_invalid_type_error(detail:)","title":"static func make_invalid_type_error(detail: String) -> RedisError","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/rediserror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/rediserror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/rediserror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/swiftyredis\/rediserror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/rediserror","title":"RedisError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisvalue\/array(_:)","title":"case Array(Array<RedisValue>)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisvalue\/bulkstring(_:)","title":"case BulkString(String)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisvalue\/int(_:)","title":"case Int(Int64)","type":"case"},{"path":"\/documentation\/swiftyredis\/redisvalue\/nil","title":"case Nil","type":"case"},{"path":"\/documentation\/swiftyredis\/redisvalue\/simplestring(_:)","title":"case SimpleString(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftyredis\/redisvalue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftyredis\/redisvalue\/init(_:)","title":"init(RedisValue) throws","type":"init"}],"path":"\/documentation\/swiftyredis\/redisvalue\/fromredisvalue-implementations","title":"FromRedisValue Implementations","type":"symbol"}],"path":"\/documentation\/swiftyredis\/redisvalue","title":"RedisValue","type":"enum"}],"path":"\/documentation\/swiftyredis","title":"SwiftyRedis","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}